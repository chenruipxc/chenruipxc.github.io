{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Linux基础","text":"教程 学linux时的笔记，平时自己看看 虚拟机的三种网络连接方式面试可能问 p5 桥接模式一个网段的地址 0~255（256-3个，） 好处：都在同一个网段，相互都可以通讯 缺点：可能因为ip地址有限，造成ip冲突 Nat（网络地址转换模式）好处：虚拟机不占用其他的ip，不会ip冲突 缺点：内网的其他人不能和虚拟机通讯 主机模式单独的一台电脑 文件系统目录结构linux 一切皆文件（包括驱动） 目录 /dev 管理设备 /media 目录（挂在u盘，光驱） /mnt 系统挂载的别的文件系统 /bin Binary缩写，存放常用命令 /sbin s是Super User的意思，存放系统管理员的系统管理程序 /home 存放普通用户的主目录，在linux中每个用户都有一个文件 /root 系统管理员，超级权限者的用户主目录 /lib 系统开机最基本的动态链接共享库，类似windows的dll文件，几乎所有应用程序都需要用到这些共享库 /lost+found 一般是空的，系统非法关机后，会存放一些文件 /etc 所有系统管理所需要的配置文件和子目录my.conf /usr 用户的应用程序和文件都放在这个目录，类似Windows的program files目录 /boot 存放得失启动linux时使用的核心文件，包括链接文件以及镜像文件 /proc 虚拟目录，系统内存的映射，访问这个目录来获取系统信息 /srv service的缩写，存放一些服务启动之后需要提取的数据 /sys 安装了linux2.6内核中新出现的一个文件系统sysfs /tmp 存放临时文件 / opt 给主机额外安装软件所放的目录（安装包）如mysql安装包 /ust/local 主机额外安装捐献所安装的目录(安装文件) /var 习惯将被修改的目录放在这个目录下，包括各种日志文件 /selinux 是一种安全子系统，能控制程序至访问特定文件 红色的别动 总结： linux目录中有且只有一个根目录 linux的个目录存放的内容市规划好的，不用乱放文件 linux是以文件的形式管理我们的设备 linux的文件目录下各个文件存放什么内容，必须有一个认识 学习后，脑壳里应该有一个目录树 远程登录linuxXShell 远程登录 XFtp5 远程上传、下载文件 使用上面软件访问服务器，需要服务器开启sshd服务，该服务会监听22号端口 P12 VI&amp;VIM vi&amp;vim常见三种模式 正常模式 插入模式 命令行模式 正常模式默认模式，在插入模式下按esc进入； 插入模式编辑模式，正常模式下按i、I、o、O、a、A、r、R进入 命令行模式提供相关指令，完成读取、存盘、替换、离开vim、显示行号等 浏览后退出:q 修改后保存 :wq 修改后不保存强制退出:q! 修改后保存不退出:w 快捷键在正常模式（默认模式）下使用 复制光标所在的行：yy 复制光标下多行，如复制5行：5yy 删除光标所在行：dd 删除光标下多行，如删除3行：3dd 设置显示文件的行号和取消显示行号：:set nu、set nonu 快速到文件末行：G 快速到文件首行：gg 撤销：u 将光标移动到指定行，如第20行：20 shift+g 上面是常用的快捷键，还有更多快捷键查看菜鸟教程 关机、重启、用户登录、注销关机重启命令shutdown -h now立即关机 shutdown -h nn分钟后关机 shutdown -r now立即重启 halt关机 reboot立即重启 sync把内存的数据同步到磁盘 登录注销尽量不要用root用户登录，如果要使用，最好进入普通用户再su root 注销：logout图形界面无效 用户管理说明：1. Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都需要首先向系统管理员申请一个账号，然后以这个账号的身份进入系统 Linux的用户都必须至少要属于一个组 添加用户useradd [选项] username 如果创建时没有选择选项，则会默认创建名为和username同名的组将用户放进去 useradd -m username创建用户，且默认分配文件夹为/home/username useradd -d /home/username username 创建一个名为username的用户，用户文件在/home/username passwd username给用户username设置密码 删除用户userdel username删除用户，但是保存其用户文件夹 userdel -r username删除用户，且删除其用户文件夹 查询用户信息id username查询用户信息 返回信息： uid gid group 用户id号 所在的组id号 所在组的组名 用户组系统可以对有共性的多个用户进行统一的管理。 新增组1groupadd &lt;groupname&gt; 删除组1groupdel &lt;groupname&gt; 增加用户时直接加上组1useradd -g &lt;groupname&gt; &lt;username&gt; 修改用户组1usermod -g &lt;groupname&gt; &lt;username&gt; 修改用户登录的初始目录1usermod -d 目录名 用户名 用户和组的相关文件/etc/passwd 用户的配置文件，记录用户的各种信息 每行的含义：用户名：口令：用户标识号：注释性描述：主目录：登录Shell etc/shadow 口令的配置文件 每行的含义： 登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志 /etc/group 租的配置文件，记录Linux包含的组的信息 每行的意义：组名：口令：组标识号：组内用户列表（组内用户列表一般看不到） 实用指令指定运行级别7个运行级别 0：关机 1：单用户（找回丢失密码） 2：多用户无网络服务 3：多用户有网络服务 4：保留 5：图形界面 6：系统重启 常用运行级别是3和5，要修改默认的运行级别可改文件 /etc/inittab的id:5:initdefault 切换到指定运行级别的指令init[012356] （没有4，4是保留指令，目前还没有） 面试题：找回root密码思路：进入到单用户模式，然后修改root密码。单用户模式root不需要密码 【用虚拟机玩 P19】 总结： 开机-&gt;在引导时输入 回车键-&gt; 看到一个界面输入 e-&gt;看到一个新的界面选中第二行（编辑内核）输入e-&gt;在这行最后输入 1，再输入 回车键-&gt;再次输入b，这时就会进入单用户模式 单用户模式输入passwd来修改root密码 说明：这种方式不能远程登录修改，就相当于必须在本机修改 帮助指令当不熟悉命令使用方法时，使用Linux提供的帮助指令来了解这个指令的使用方法 man全称manual man [命令或配置文件] help help [命令] 文件目录类pwd 基本语法： 1pwd 功能描述：显示当前工作目录的绝对路径 ls 基本语法： 1ls [选项] [目录或是文件] 常用选项： -a ：显示当前所有文件和目录，包括隐藏的 -l ：以列表方式显示信息 cd 基本语法： 1cd [参数] 功能描述：切换到制定目录 常用参数： 绝对路径和相对路径 cd ~或cd :回到自己的家目录 cd.. 回到当前目录的上一级目录 mkdirmkdir指令用于创建目录 基本语法： 1mkdir [选项] 要创建的目录 常用选项： -p ：创建多级目录 实例： 在home目录下创建/home/dog文件夹 1mkdir /home/dog 在home目录下创建/home/animal/dog文件夹 1mkdir -p /home/animal/dog touchtouch指令创建空文件 基本语法： 1touch 文件名称 ​ 可以一次性创建多个文件 1touch ok1.txt ok2.txt cpcp指令拷贝文件到指定目录 基本语法： 1cp [选项] source dest 常用选项： -r :递归复制整个文件 使用实例： 将/home/aaa.txt拷贝到/home/bbb目录下 1cp /home/aaa.txt /home/bbb 执行结果：在/home/bbb目录下有aaa.txt文件 递归复制整个文件夹 将/home/test整个目录拷贝到/home/dog 1cp -r /home/test /home/dog 执行结果：在/home/dog下有一个test文件夹 使用细节：强制覆盖不提示的方法：\\cp rmrm指令移除文件或目录 基本语法： 1rm [选项] 要删除的文件或目录 常用选项： -r : 递归删除整个文件夹 -f : 强制删除不提示 使用细节： 强制删除不提示的方法：带上 -f参数即可 mvmv移动文件与目录或重命名 基本语法 1mv oldNameFile newNameFile //功能描述：重命名 1mv /temp/moveflie /targetFolder //功能描述：移动文件 catcat查看文件内容 基本语法 1cat [选项] 要查看的文件 常用选项 -n : 显示符号 使用细节 cat只能浏览文件，而不能修改文件，为了浏览方便，一般会带上 管道命令 | more 1cat -n /etc/proflie | more moremore指令是一个基于VI编辑器的文本过滤器，它以全屏幕的方式俺也显示文本文件的内容。 more指令中内置了若干快捷键，详见操作说明 基本语法 1more 要查看的文件 操作说明 操作 功能说明 空白键（space） 代表向下翻一页； Enter 代表向下翻一行 q 代表立刻离开more，不再显示该文件内容 Ctrl+F 向下滚动一屏 Ctrl+B 返回上一屏 = 输出当前的行号 :f 输出文件名和当前的行号 lessless指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载后才显示，而是根据显示需要加载内容，对于大型文件具有较高的效率 基本语法 1less 要查看的文件 操作说明 操作 功能说明 空白键 向下翻动一页 [pagedown] 向下翻动一页 [pageup] 向下反动一页 /字串 向下搜寻【字串】n下一个，N上一个 ？字串 向上搜寻【字串】n下一个，N上一个 q 离开less这个程序 &gt;和&gt;&gt;&gt;输出重定向和&gt;&gt;追加 基本语法 ls -l &gt;文件 （列表的内容写入文件（覆盖写入）） ls -al &gt;&gt;文件 （列表的内容追加到文件的末尾） cat 文件1 &gt; 文件2 （将文件1的内容覆盖到文件2） echo “内容” &gt;&gt; 文件 echoecho输出内容到控制台 基本语法 1echo [选项] [输出内容] headhead用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容 基本语法 1head 文件 //查看文件头10行内容 1head -n 5 文件 //查看文件头5行内容，5可以任意行数 tail与head一样，显示末尾 ln软链接指令，类似于Windows的快捷方式，主要存放了软链接其他文件的路径 基本语法 1ln -s [源文件或路径][软链接名] //给源文件创建一个软链接 删除软链接时注意： ​ 如要删除当前目录下的linkToPhoto文件夹： 1rm -rf linkToPhoto ​ 不能写成rm -rf linkToPhoto/;这种方式是删除连接到的文件夹 细节说明，当我们使用pwd指令查看目录时，荏苒看到的是软链接所在的目录 history查看已经执行过历史命令，也可以执行历史指令 基本语法 1history //查看已经执行过历史命令 时间日期类date显示当前日期 基本语法 12345date //显示当前时间date +%Y //显示当前年份date +%m //显示当前月份date +%d //显示当前是那一天date &quot;+%Y-%m-%d %H:%M:%S&quot; //显示年月日时分秒 设置日期 基本语法 1date -s 字符串时间 实用案例 设置系统当前时间，如 2020-11-11 11:22:22 1date -s &quot;2020-11-11 11:22:22&quot; cal查看日历指令 基本语法 1cal [选项] //不加选项，显示本月日历 1cal 2020 //显示2020年日历 搜索查找类findfind指令将从指定目录向下递归遍历其各个子目录，将满足条件的文件或者目录显示在终端。 基本语法 1find [搜索范围] [选项] 文件 选项 功能 -name&lt;查询方式&gt; 按照指定文件名查找模式查找文件 -user&lt;用户名&gt; 查找属于指定用户的所有文件 -size&lt;文件大小&gt; 按照指定的文件大小查找文件 应用实例 查找/home目录下 名为demo.py的文件 1find /home -name demo.py 按拥有者：查找/home/cr/图片 目录下用户名为cr的文件 1find /home/cr/图片 -user cr locatelocate指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件中所有文件名及路径的locate数据库实现快速定位给定的文件。locate指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新locate时刻。 基本语法 1locate 搜索文件 特别说明 由于locate指令基于数据库查询，所有第一次运行前，必须使用updatedb指令创建locate数据库 应用实例 grep 和 |grep过滤查找，管道符“|”表示将前一个命令的处理结果输出传递给后面的命令处理 基本语法 1grep [选项] 查找内容 源文件 常用选项 选项 功能 -n 显示匹配行及行号 -i 忽略字母大小写 应用实例 查找hello.py里面的关键字print 1cat /home/cr/workplace/pywork/pypy/demo.py | grep print 压缩和解压类gzip/gunzipgzip用于压缩文件，gunzip用于解压文件 说明 只能压缩文件，且压缩后缀只能是.gz；压缩和解压都是直接将原文件替换。 基本语法 12gzip 文件 //压缩文件，只能将文件压缩文件为*.gz格式gunzip 文件.gz //解压文件 zip/unzip在项目打包发布中很有用，会保留源文件或文件夹 基本语法 12zip [选项] xxx.zip 将要压缩的内容 //压缩文件和目录的命令unzip [选项] xxx.zip //解压缩文件 zip常用选项 -r: 递归压缩，即压缩目录 unzip常用选项 -d&lt;目录&gt;: 制定解压后文件的存放目录 tartar指令是打包指令，最后打包后的文件是.tar.gz的文件 基本语法 1tar [选项] XXX.tar.gz 打包的内容 //打包目录，和zip类似 选项说明 选项 功能 -c 产生.tar打包文件 -v 显示详细信息 -f 制定压缩后的文件名 -z 打包时同时压缩 -x 解包.tar文件 应用实例 将/home/cr/尚硅谷/ys里面的1、2、3、4、5文件压缩成a.tar.gz(这里有多个文件，先提前进入该目录) 1tar -zcvf a.tar.gz 1 2 3 4 5 //该命令可以压缩文件夹 将上述a.tar.gz解压 1tar -zxvf a.tar.gz 将a.tar.gz解压到制定目录 1tar -zxvf a.tar.gz -C /回收站 //注意有个参数`-C` 注意事项 压缩和解压的参数对应-zcvf(压缩)和-zxvf(解压) 组管理和权限管理难点、重点 组的基本介绍在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文件有所有者、所在组、其他组的概念 文件/目录所有者一般为文件的创建者 查看文件的所有者 1ls-ahl 修改文件所有者 1chown 用户名 文件名 例如：将当前目录下的a.txt的所有者修改为hadoop（需要用root用户） 1chown hadoop a.txt 文件/目录所在组一般为文件创建者所在组 查看文件所有者和文件所在组是一样的命令 修改文件所在组 1chgrp 组名 文件名 其他组除文件的所有者和所在组的用户外，系统的其他用户都是文件其他组 修改用户所在组1usermod -g &lt;groupname&gt; &lt;username&gt; 权限的基本介绍根据例子来看，执行ls -l查看文件信息 1drwxr-xr-x 6 cr cr 4096 9月 26 16:14 下载/ rwxdrwxr-xr-x第一个字母d代表的是文件类型： - : 普通文件 d : 目录 l : 软链接 c : 字符设备（键盘，鼠标） b : 块文件，硬盘 rwxr-xr-x是由三个rwx）组成，分别代表文件所有者、文件所在组用户、文件其他组用户拥有的权限 rwx作用到文件 r代表可读：可以读取，查看 w代表可写：可以修改，但是不代表可以删除该文件，删除文件的前提条件是对该文件所在的目录有写权限，才能删除该文件 x代表可执行：可以被执行 rwx作用到目录 r代表可读：可以读取，ls查看目录内容 w代表可写：可以修改，目录内创建+删除+重命名目录 x代表可执行：可以进入该目录 注意：rwx可以用数字表示，r=4,w=2,x=1; 所以rwxr-xr-x可以表示为755&gt; 解读表 字符 含义 6 目录：子目录数；文件：硬链接数 cr 用户 cr 组 4096 文件大小，如果是文件夹，显示4096 9月 26 16:14 最后修改时间 下载/ 文件、文件夹名 修改权限-chmod 基本说明： 通过chmod可以修改文件或目录的权限 第一种方式：+、-、=变更权限u：所有者；g：所有组；o：其他人；a：所有人（u、g、o的总和） 123chmod u=rwx,g=rx,o=x 文件目录名 //直接赋值法chmod o+w 文件目录名 //给指定人员添加权限chmod a-w 文件目录名 //移除某人权限 第二种方式（修改数字变更权限）r=4, w=2, x=1 rwx=4+2+1=7 1chmod u=rwx,g=rx,o=x 文件目录名 相当于 1chmod 751 文件目录名 修改文件所有者-chmod 基本介绍 12chown newowner file //改变文件的所有者chown newowner:newgroup file //同时改变文件所有者和文件所在组 R如果时目录，则使其下所有子文件或目录递归生效 1chown -R newowner folder 修改文件所在组-chgrp12chgrp newgroup file //改变文件的所有组chgrp -R newgroup folder //改变文件夹所有组 定时任务调度crond任务调度crontab 进行 定时任务的设置。 概述： 任务调度：是指系统在某个时间执行的特定的命令或程序 任务调度分类： 系统工作：有些重要的工作必须周而复始地执行。如病毒扫描等 个别用户工作：个别用户可能希望执行某些程序，比如对mysql数据库的备份。 基本语法： 1crontab [选项] 常用选项： -e 编辑crontab定时任务 -l 查询crontab任务 -r 删除当前用户所有的crontab任务 案例: 1crontab -e 写入 1*/1 * * * * ls -l /home/cr/下载 &gt; /home/cr/下载/to.txt 改任务是每分钟执行ls -l /home/cr/下载 &gt; /home/cr/下载/to.txt 参数说明： 项目 含义 范围 第一个‘*’所在位置 一小时当中的第几分钟 0-59 第二个‘*’所在位置 一天当中的第几个小时 0-23 第三个‘*’所在位置 一个月当中的第几天 1-31 第四个‘*’所在位置 一年当中的第几月 1-12 第五个‘*’所在位置 一周当中的星期几 0-7（0和7都是星期日） 特殊符号的说明： 特殊符号 含义 * 代表任何时间。比如第一个‘*’就代表一小时中每分钟都执行一次 ， 代表不连续时间。比如0 8,12,16 * * *代表每天8点0，12点0分，16点0分都执行一次 - 代表连续的时间范围。如0 5 * * 1-6，代表在周一到周六的凌晨5点0分执行命令 */n 代表每隔多久执行一次。比如*/1 * * * *，代表每分钟执行一次 Linux磁盘分区和挂载分区基础知识 mbr分区： 最多支持四个主分区 系统只能安装在主分区 扩展分区要占一个主分区 MBR最大只支持2TB，但拥有最好的兼容性 gpt分区 支持无线多个主分区（但操作系统可能限制，比如windows下最多128个分区） 最大支持18EB的大容量（1EB=1024PB,1PB=1024TB） windows7 64位以后支持gtp Linux分区原理介绍 Linux来说，无论有几个分区，分给哪一个目录使用，他归根结底就只有一个根目录，一个独立且唯一的文件结构，Linux中每个分区都是用来组成整个文件系统的一部分。 Linux采用了一种叫‘载入’的处理方法。它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来。这时要载入的一个分区将使它在存储空间在一个目录下获得 挂载的案例挂载：mount 取消挂载：umount 需求：给linux系统增加一个新的硬盘，并且挂载到/home/newdisk 分区： 1fdisk /dev/sdx //sdx是需要分区的硬盘，如sda,sdb 格式化： 1mkfs -t ext4 /dev/sdxx //sdxx是需要格式化的分区 挂载： 先创建一个目录 1mkdir /home/newdisk 挂载（关机后挂载失效） 1mount dev/sdxx /home/newdisk 设置自动挂载（永久挂载） 修改/etc/fstab文件将挂载的分区的挂载点修改为锁挂在的目录后mount -a后生效 磁盘情况查询 基本语法 1df -h 查询指定目录的磁盘使用情况 1du -h /目录 查询指定目录的磁盘占用情况，默认为当前目录 -s 指定目录占用大小汇总 -h 带计量单位 -a 含文件 –max-depth=1 子目录深度 -c 列出明细同时增加汇总值 案例 查询/home/cr目录的磁盘占用情况，深度为1 1du -ach --max-depth=1 /home/cr 统计/home/cr目录下对的文件个数 1ls -la /home/cr | grep &quot;^-&quot; | wc -l ls -la /home/cr 显示目录下所有文件和文件夹信息 grep “^-“ 查找 以”-“开头的信息（-开头为文件，d开头为文件夹） wc -l 统计个数 统计/home/cr目录下所有的文件个数（包括子文件夹下） 1ls -laR /home/cr | grep &quot;^-&quot; | wc -l R 递归统计 网络配置P42 进程管理进程的基本介绍 在linux中，每个执行的程序都称为一个进程。每一个进程都分配一个ID号 每一个进程，都对应一个父进程，而这个父进程可以复制多个子进程。例如www服务器 每个进程都可能以两种方式存在的。前台和后台，所谓前台进程就是用户目录的屏幕上可以进行操作的。后台进程则是实际在操作，但由于屏幕上无法看到进程，通常使用后台方式执行 一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中，直到关机才结束 显示系统执行的进程 基本介绍 ps命令是用来查看目前系统中，有哪些正在执行，以及他们执行的状况。可以不加任何参数 字段 说明 PID 进程识别号 TTY 终端机号 TIME 此进程所消耗CPU时间 CMD 正在执行的命令或进程 选项 说明 ps -a 显示当前终端的所有进程信息 ps -u 以用户的格式显示进程信息 ps -x 显示后台进程运行参数 ps详解 指令： 1ps -aux | more 1ps -aux | grep xxx //查看xxx进程信息 指令说明 字段 说明 USER 用户名称 PID 进程号 %CPU 进程占用cpu的百分比 %MEM 进程占用物理内存百分比 VSZ 进程占用的虚拟内存大小（kb） RSS 进程占用的物理内存大小（kb） TT 终端名称，缩写 STAT 进程状态，S-睡眠，s-会话的先导进程，N-表示进程拥有比普通优先级更低的优先级，R-正在运行，D-短期等待，Z-僵死进程，T-被跟踪或停止等等 STARTED 进程的启动时间 TIME CPU时间，即进程使用CPU的总时间 COMMAND 启动进程所用的命令和参数，如果过长会被截断显示 终止进程 介绍：若是某个进程执行一半需要停止时，或是已消耗了很大的系统资源时，此时可以考虑停止该进程。使用kill命令来完成此项任务。 基本语法 12kill [选项] 进程号 //功能描述：通过进程号杀死进程killall 进程名称 //功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变得很慢时很有用 常用选项 -9 : 表示强迫进程立即停止 动态监控进程类似Windows的进程管理类似 1top [选项] 选项 功能 -d 指定top命令每隔几秒更新，默认3秒 -i 使top不显示任何闲置或者僵死的进程 -p 通过指定监控ID来仅仅监控某个进程的状态 交互操作说明 操作 功能 P 以CPU使用率排序，默认 M 以内存的使用率排序 N 以PID排序 q 退出TOP 服务管理 介绍 服务（service）本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其他程序的请求，比如（mysql、sshd、防火墙等），因此我们又称守护进程，是linux中非常重要的知识点 service管理指令 123service 服务名 start|stop|restart|reload|status或systemctl 面试题百度面试题 问题 Linux常用命令，至少6个 答案 回答高级命令 netstat、top、lsblk、find、ps、chkconfig 瓜子二手车题 问题 linux查看内存、磁盘、io读写、端口占用、进程等命令 答案 top df -lh iotop netstat -tunlp ps -aux","link":"/2021/10/17/linux%E5%9F%BA%E7%A1%80/"},{"title":"","text":"manjaro系统配置hadoop（伪分布）注意事项注意ssh一定要配置好配置文件和环境变量对应好core-site.xml 配置文件 123456&lt;configuration&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://hadoop.tecadmin.com:9000&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; value要改为hdfs://localhost.com:9000","link":"/2021/09/28/manjaro%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AEhadoop%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%EF%BC%89%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"},{"title":"","text":"mysql安装后未设置密码的问题[参考](https://www.cnblogs.com/itor/p/11887432.html） 添加后skip-grant-tables后要重新启动mysql最好（直接重启） 还要注意进入mysql后 需要 flush privileges;","link":"/2021/09/28/mysql%E5%AE%89%E8%A3%85%E5%90%8E%E6%9C%AA%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/"},{"title":"python环境配置","text":"Abstract： 文章记录我从windows迁移到manjaro过程中发现搭建环境都需要重新接受度娘的哺乳，为了早日独立，在这里记录一些重要的环境配置过程（目前包括TensorFlow、jupyter notebook扩展和切换内核、Anaconda） ！！！ 发现在manjaro里安装的TensorFlow-GPU有点问题，有待解决 TensorFlow-GPU（包括anaconda虚拟环境的创建） GPU算力查询 安装方式：Anaconda创建一个专门用于TensorFlow的虚拟环境，防止某些包的依赖冲突问题 安装anaconda建议以后python使用anaconda（方便管理不同的版本，创建虚拟环境） 注意：linux下安装anaconda后可能没有配置环境变量。在终端下查看conda -v 若没有anaconda信息，这需要配置环境变量 终端输入(manjaro) 1sudo vim /etc/profile 在打开的文件最后一行添加自己的anaconda/bin路径 1export PATH=/home/cr/anaconda3/bin:$PATH 添加完后如果需要立即生效： 1source /etc/profile Anaconda和Python的换源anaconda 换源 生成.condarc配置文件 1conda config --set show_channel_urls yes 然后替换为下面内容 1234567891011121314151617channels: - defaultsshow_channel_urls: truechannel_alias: https://mirror.tuna.tsinghua.edu.cn/anacondadefault_channels: - https://mirror.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirror.tuna.tsinghua.edu.cn/anaconda/pkgs/free - https://mirror.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirror.tuna.tsinghua.edu.cn/anaconda/pkgs/pro - https://mirror.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2custom_channels: conda-forge: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirror.tuna.tsinghua.edu.cn/anaconda/cloud python换源1pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 安装cuda和cudnn对于TensorFlow的gpu版本匹配见下图 发现安装的有问题有待解决原安装方法参考链接 jupyter notebookjupyter notbook修改默认路径生成配置文件 1jupyter notebook --generate-config 在配置文件中查找 12## The directory to use for notebooks and kernels.c.NotebookApp.notebook_dir = '//path' 修改为自己的路径即可 安装扩展123456pip install jupyter_contrib_nbextensionsjupyter contrib nbextension install --user#启用 nbextensionsjupyter nbextension enable codefolding/main 选择python内核安装ipykernel 1pip install ipykernel 在想要添加的python环境里面执行，如我有一个tf的虚拟环境，我需要进入到tf虚拟环境中在执行： 1python3 -m ipykernel install --user --name=tf tf是为这个内核取名，不一定和虚拟环境名字一样","link":"/2021/09/28/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","link":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"环境搭建","slug":"环境搭建","link":"/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"}]}